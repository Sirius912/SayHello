import React, { useState, useEffect } from 'react';
import { StatusBar } from 'expo-status-bar';
import { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, Alert, Clipboard, SafeAreaView } from 'react-native';
import * as Font from 'expo-font';

export default function MessageScreen() {
    const [selectedButton, setSelectedButton] = useState([]);
    const [fontsLoaded, setFontsLoaded] = useState(false);

    useEffect(() => {
        async function loadFonts() {
          await Font.loadAsync({
            NanumSquareRoundEB: require('../../assets/fonts/NanumSquareRoundOTFEB.otf'), // Í∞ÄÏû• ÍµµÍ≤å
            NanumSquareRoundB: require('../../assets/fonts/NanumSquareRoundOTFB.otf'), // ÎëêÍªçÍ≤å
            NanumSquareRoundR: require('../../assets/fonts/NanumSquareRoundOTFR.otf'), // Î≥¥ÌÜµ
            NanumSquareRoundL: require('../../assets/fonts/NanumSquareRoundOTFL.otf'), // ÏñáÍ≤å
            GeumUnBohwa: require('../../assets/fonts/GeumUnBohwa.ttf'),
            Mugunghwa: require('../../assets/fonts/radioFont.ttf'),
          });
          setFontsLoaded(true);
        }
        loadFonts();
    }, []);

    if (!fontsLoaded){
    return null;
    }

    const handlePress = (item) => {
        setSelectedButton(prev => prev === item ? null : item);
    };

    const messages = {
        'Ïû¨Ìï¥': `Ìï†ÏïÑÎ≤ÑÏßÄÏôÄ Ìï†Î®∏ÎãàÍªò üòä
ÏßÄÏßÑ Ïù¥ÌõÑÏóê Îëê Î∂Ñ Îã§ Ïûò Í≥ÑÏãúÏ£†? ÎßéÏù¥ ÎÜÄÎùºÏÖ®ÏùÑ ÌÖêÎç∞, Î≥ÑÏùº ÏóÜÏúºÏÖ®Í∏∏ Ï†ïÎßê Î∞îÎùºÏöî!!
Ïò§ÎäòÏùÄ ÎÇ†Ïî®Í∞Ä Ï¢Ä ÏåÄÏåÄÌï¥Ïöîü•∂ Í∏∞Ïò®ÏùÄ 4ÎèÑÍ≥†, ÎπÑ Ïò¨ ÌôïÎ•†ÏùÄ 2%Î∞ñÏóê Ïïà ÎêòÏßÄÎßå ÏäµÎèÑÍ∞Ä 68%ÎùºÏÑú Ï°∞Í∏à ÏäµÌïòÍ≤å ÎäêÍª¥Ïßà ÏàòÎèÑ ÏûàÏùÑ Í≤É Í∞ôÏïÑÏöî.
Î∞îÎûåÏùÄ ÏãúÏÜç 2mÎ°ú ÏÇ¥ÎûëÏÇ¥Îûë Î∂àÍ≥† ÏûàÏñ¥ÏöîüçÉ Îëê Î∂Ñ Íº≠ Îî∞ÎúªÌïòÍ≤å ÏûÖÍ≥† Í±¥Í∞ï Ïûò Ï±ôÍ∏∞ÏÑ∏Ïöîüß£üß§
Ìï≠ÏÉÅ ÎßéÏù¥ ÏÇ¨ÎûëÌïòÍ≥† Í≥ß ÏÜåÏãù Îì§ÏùÑ Ïàò ÏûàÏúºÎ©¥ Ï¢ãÍ≤†Ïñ¥Ïöî!üíï
Î™∏ Ï°∞Ïã¨ÌïòÏãúÍ≥† Îòê Ïó∞ÎùΩÎìúÎ¶¥Í≤åÏöî! üòäüíå`,

        'ÎÇ†Ïî® Î≥¥Í≥†': `Ìï†Î®∏Îãà, Ìï†ÏïÑÎ≤ÑÏßÄÍªò üòä
Ïò§ÎäòÏùò ÎÇ†Ïî®Î•º ÏïåÎ†§ÎìúÎ¶ΩÎãàÎã§. ÌòÑÏû¨ Í∏∞Ïò®ÏùÄ 18¬∞CÎ°ú ÏÑ†ÏÑ†ÌïòÎ©∞, Íµ¨Î¶ÑÏù¥ ÏïΩÍ∞Ñ ÎÇÄ ÌùêÎ¶∞ ÎÇ†Ïî®ÏûÖÎãàÎã§.‚òÅ
Í∞ïÏàò ÌôïÎ•†ÏùÄ 20%Ïù¥Î©∞ ÎØ∏ÏÑ∏Î®ºÏßÄ ÏàòÏπòÎäî 'Î≥¥ÌÜµ' Îã®Í≥ÑÏûÖÎãàÎã§. ÏÇ∞Ï±ÖÌïòÏãúÍ∏∞Ïóê Ï¢ãÏùÄ ÎÇ†Ïî®ÏßÄÎßå, Í∞ÄÎ≤ºÏö¥ Ïô∏Ìà¨Î•º Ï§ÄÎπÑÌïòÏãúÎ©¥ Ï¢ãÏùÑ Í≤É Í∞ôÏäµÎãàÎã§. ü•π
Ìï≠ÏÉÅ Í±¥Í∞ïÏóê Ïú†ÏùòÌïòÏãúÍ≥†, Îã§ÏùåÏóê Îµê ÎïåÍπåÏßÄ ÌñâÎ≥µÌïú ÏùºÎì§Îßå Í∞ÄÎìùÌïòÏãúÍ∏∏ Î∞îÎûçÎãàÎã§. üòäüíå`,

        'ÎØ∏ÏÑ∏Î®ºÏßÄ': `ÏÇ¨ÎûëÌïòÎäî Ìï†Î®∏ÎãàÏôÄ Ìï†ÏïÑÎ≤ÑÏßÄ! üòä
Ïò§Îäò ÎØ∏ÏÑ∏Î®ºÏßÄ ÏàòÏπòÍ∞Ä 'ÎÇòÏÅ®' ÏàòÏ§ÄÏúºÎ°ú Ïò¨ÎùºÍ∞îÏäµÎãàÎã§. Ïô∏Ï∂ú Ïãú ÎßàÏä§ÌÅ¨Î•º Íº≠ Ï∞©Ïö©ÌïòÏãúÍ≥†, üò∑
Í∞ÄÎä•Ìïú Ïã§ÎÇ¥ÏóêÏÑú Î≥¥ÎÇ¥ÏãúÎäî Í≤ÉÏù¥ Ï¢ãÏùÑ Í≤É Í∞ôÏäµÎãàÎã§. Í≥µÍ∏∞Ï≤≠Ï†ïÍ∏∞Î•º Í∞ÄÎèôÌï¥ÎëêÏãúÍ≥† Ï∞ΩÎ¨∏ÏùÄ Îã´ÏïÑÎëêÏÑ∏Ïöî. ü™ü
Í±¥Í∞ï Í¥ÄÎ¶¨Ïóê ÌäπÌûà Ïã†Í≤Ω Ïç®Ï£ºÏãúÍ∏∏ Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§. Ìï≠ÏÉÅ Í±¥Í∞ïÌïòÏÑ∏Ïöî! üòäüíå`,

        'ÏóÜÏùå': `ÏÇ¨ÎûëÌïòÎäî Ìï†ÏïÑÎ≤ÑÏßÄ, üòä
Ìï≠ÏÉÅ Í±¥Í∞ïÌïòÏã†ÏßÄÏöî? Ïò§ÎäòÏùÄ ÌäπÎ≥ÑÌïú ÏÜåÏãù ÏóÜÏù¥ ÏïàÎ∂ÄÎ•º Ï†ÑÌïòÍ≥† Ïã∂Ïñ¥ Ìé∏ÏßÄÎ•º ÏîÅÎãàÎã§. 
ÏöîÏ¶ò ÎÇ†Ïî®Í∞Ä Ï∂îÏõåÏßÄÍ≥† ÏûàÏúºÎãà Í∞êÍ∏∞ Ï°∞Ïã¨ÌïòÏãúÍ≥†, Í±¥Í∞ï Í¥ÄÎ¶¨Ïóê Ïú†ÏùòÌïòÏÑ∏Ïöî.
Í≥ß Ï∞æÏïÑÎµê Ïàò ÏûàÍ∏∞Î•º Î∞îÎùºÎ©∞, Í∑∏ÎïåÍπåÏßÄ ÌñâÎ≥µÌïú ÏùºÎì§Îßå Í∞ÄÎìùÌïòÏãúÍ∏∏ Î∞îÎûçÎãàÎã§.
Ìï≠ÏÉÅ Í±¥Í∞ïÌïòÏÑ∏Ïöî! üòäüíå`
    };

    const message = selectedButton ? messages[selectedButton] : "ÏïàÎ∂ÄÎ•º Ï†ÑÎã¨Ìï† Î©îÏãúÏßÄ ÎÇ¥Ïö©ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî!";

    const copyToClipboard = () => {
        Clipboard.setString(message);
        Alert.alert('Î≥µÏÇ¨ ÏôÑÎ£å!', 'ÌÖçÏä§Ìä∏Í∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§.');
    };

    return (
        <SafeAreaView edges={['top']} style={styles.safeArea}>
            <Image
                source={require('../../assets/headerTab_v.png')}
                style={{ width: '100%', height: 30, justifyContent: 'center', alignItems: 'center' }}
            />
            <View style={styles.box}>
                <View style={{ alignItems: 'center' }}>
                    <Text style={styles.header_title}>ÏïàÎ∂Ä Î©îÏãúÏßÄ ÏûëÏÑ±</Text>
                </View>
                <ScrollView showsVerticalScrollIndicator={false}>
                    <View style={styles.shadowView}>
                        <View style={{ flexDirection: 'row', }}>
                            <View style={{ flex: 1 }}>
                                <Text style={styles.text1}>ÏïàÎ∂Ä ÎåÄÏÉÅ</Text>
                                <Text style={styles.text1}>ÏµúÍ∑º Ïó∞ÎùΩ</Text>
                                <Text style={styles.text1}>Ïó∞ÎùΩ Ï£ºÍ∏∞</Text>
                            </View>
                            <View style={{ flex: 2, marginLeft: 10 }}>
                                <Text style={styles.text2}>Ìï†ÏïÑÎ≤ÑÏßÄ</Text>
                                <Text style={styles.text2}>2025-02-10</Text>
                                <Text style={styles.text2}>1Í∞úÏõî</Text>
                            </View>
                        </View>
                        <View style={styles.divider}></View>
                        <Text style={styles.text1}>Ï†ïÎ≥¥</Text>
                        <View style={{ marginVertical: 7 }}>
                            <View style={{ flexDirection: 'row' }}>
                                <View style={{ flex: 1 }}>
                                    <Image source={require('../../assets/earthquake.jpg')} style={styles.photo}></Image>
                                </View>
                                <View style={{ flex: 2, marginLeft: 10 }}>
                                    <Text style={styles.text2}>Ïû¨Ìï¥</Text>
                                    <Text style={styles.text3}>2025-03-01</Text>
                                    <Text style={styles.text3}>ÏßÄÏßÑ 7.1</Text>
                                </View>

                            </View>
                        </View>
                        <View style={styles.divider}></View>
                        <Text style={styles.text1}>Î©îÏãúÏßÄÏóê Ìè¨Ìï®Ìï† ÎÇ¥Ïö©:</Text>
                        <ScrollView style={{ marginVertical: 7 }} horizontal={true} showsHorizontalScrollIndicator={false}>
                            <View style={{ flexDirection: 'row' }}>
                                {['Ïû¨Ìï¥', 'ÎÇ†Ïî® Î≥¥Í≥†', 'ÎØ∏ÏÑ∏Î®ºÏßÄ', 'ÏóÜÏùå'].map((item) => (
                                    <TouchableOpacity
                                        key={item}
                                        style={[
                                            styles.option,
                                            selectedButton == item && styles.selectedButton,
                                        ]}
                                        onPress={() => handlePress(item)}
                                    >
                                        <Text style={[styles.buttonText, selectedButton === item && styles.selectedText,]}>
                                            {item}
                                        </Text>
                                    </TouchableOpacity>
                                ))}
                            </View>
                        </ScrollView>
                        </View>
                        <View style={styles.shadowView}>

                        <Text style={styles.text1}>Î©îÏãúÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞</Text>
                        <View style={styles.divider}></View>
                        <View>
                            <Text style={styles.messageText}>{message}</Text>
                        </View>
                    </View>
                    <View style={styles.copy_view}>
                        <TouchableOpacity
                            style={styles.copy_button} onPress={copyToClipboard}>
                            <Text style={styles.copyText}>Î≥µÏÇ¨</Text>
                        </TouchableOpacity>
                    </View>
                </ScrollView>
            </View>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    header: {
        height: 30,
        backgroundColor: '#ffffff',
    },
    header_title: {
        fontSize: 27,
        fontWeight: 'bold',
        marginBottom: 5,
    },
    box: {
        backgroundColor: '#ffffff',
        padding: 15,
    },
    buttonText: {
        fontFamily: 'NanumSquareRoundEB',
        fontWeight: '600',
    },
    copy_view: {
        paddingBottom: 35
    },
    option: {
        padding: 5,
        alignItems: 'center',
        borderRadius: 10,
        borderWidth: 1,
        borderColor: '#cccccc',
        marginHorizontal: 4,
        paddingHorizontal: 12
    },
    copy_button: {
        marginTop: 10,
        backgroundColor: '#41BA6B',
        padding: 8,
        borderRadius: 8,
        paddingHorizontal: 18,
        height: 50,
        justifyContent: 'center',
        alignItems: 'center',
        shadowOpacity: 0.3,
        shadowRadius: 4, 
        shadowColor: "#000",
        shadowOffset: { width: 0, height: 1 },
    },
    shadowView: {
        marginHorizontal: 5,
        marginTop: 10,
        marginBottom: 5,
        backgroundColor: '#fff',
        borderRadius: 10,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.25,
        shadowRadius: 3.84,
        paddingHorizontal: 15,
        paddingTop: 8,
        paddingBottom: 10,
    },
    divider: {
        height: 1,
        backgroundColor: '#ddd',
        marginVertical: 7,
    },
    messageBox: {
        borderColor: '#ccc',
        borderWidth: 1,
        borderRadius: 8,
        padding: 12,
        minHeight: 120,
        marginBottom: 16,
    },
    copyText: {
        textAlign: 'center',
        color: '#ffffff',
        fontSize: 20,
        fontWeight: '600',
        fontFamily: 'NanumSquareRoundEB',
      },
    messageText: {
        padding: 5,
        // backgroundColor: '#41BA6B',
        marginTop: 3,
        fontFamily: 'Mugunghwa',
        fontSize: 18,
        fontWeight: 600,
        lineHeight: 20,
    },
    photo: {
        width: 100,
        height: 100,
        borderRadius: 10,
    },
    safeArea: {
        backgroundColor: "#fff",
        flex: 1,
    },
    selectedButton: {
        backgroundColor: '#41BA6B',
    },
    selectedText: {
        fontFamily: 'NanumSquareRoundEB',
        color: 'white',
    },
    text1: {
        fontFamily: 'NanumSquareRoundEB',
        fontSize: 17,
        marginVertical: 7,
        fontWeight: 'bold'
    },
    text2: {
        fontFamily: 'NanumSquareRoundB',
        fontSize: 17,
        marginVertical: 7,
        color: '#777'
    },
    text3: {
        fontFamily: 'NanumSquareRoundE',
        marginVertical: 3,
        fontSize: 15,
    },
    title: {
        fontSize: 30,
        fontWeight: 'bold',
        alignItems: 'center',
        marginBottom: 10,
        marginTop: -10
    },
});